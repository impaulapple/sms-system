{"version":3,"sources":["modules/SMS_Module/TabPanel.js","modules/SMS_Module/DataSource.js","modules/SMS_Module/index.js"],"names":["TabPanel","children","value","index","other","role","hidden","id","aria-labelledby","Box","p","theme","createTheme","overrides","MuiTabs","scrollButtonsDesktop","backgroundColor","DataSource","t","useTranslation","React","useState","paramValue","setValue","caption","isEdit","paramDataSourceList","setDataSourceList","updateTabNameFunc","e","target","validIsEmpty","parentElement","data","console","log","ThemeProvider","sx","width","bgcolor","Tabs","onChange","event","newValue","variant","scrollButtons","map","obj","i","Tab","label","onDoubleClick","style","minWidth","background","onClick","aNewList","slice","push","length","useStyles","makeStyles","root","flexGrow","palette","paper","display","height","tabs","borderRight","divider","test","SMSPage","classes","aTabList","component","className","orientation","aria-label","componentsprops","indicator"],"mappings":"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","file":"static/js/3.640051ec.chunk.js","sourcesContent":["import { Box } from \"@material-ui/core\";\r\nimport React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst TabPanel = ({ children, value, index, ...other }) => {\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`vertical-tabpanel-${index}`}\r\n            aria-labelledby={`vertical-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TabPanel;","import { Box, Tabs, Tab, TextField } from \"@material-ui/core\";\r\nimport React from 'react';\r\nimport TabPanel from \"./TabPanel\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport { validIsEmpty } from \"../../api/Validator\";\r\n\r\nconst theme = createTheme({\r\n    overrides: {\r\n        MuiTabs: {\r\n            scrollButtonsDesktop: {\r\n                backgroundColor: 'rgb(0 0 0 / 13%)'\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nconst DataSource = () => {\r\n\r\n    const { t } = useTranslation();\r\n\r\n    const [paramValue, setValue] = React.useState(0);\r\n\r\n    const [paramDataSourceList, setDataSourceList] = React.useState([\r\n        {\r\n            id: 123453,\r\n            caption: t('newTable'),\r\n            isEdit: false\r\n        },\r\n        {\r\n            id: 123453564678,\r\n            caption: t('test2'),\r\n            isEdit: false\r\n        }\r\n    ]);\r\n\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const updateTabNameFunc = (e) => {\r\n        let id = e.target.id;\r\n        if (validIsEmpty(id))\r\n            id = e.target.parentElement.id\r\n\r\n\r\n        let data = e.target.parentElement.data;\r\n        console.log(e, id, data)\r\n    }\r\n\r\n    const addNewDataSourceFunc = (e) => {\r\n\r\n        let aNewList = paramDataSourceList.slice();\r\n\r\n        aNewList.push({\r\n            caption: t('newTable') + (aNewList.length + 1),\r\n            isEdit: false\r\n        });\r\n\r\n        setDataSourceList(aNewList);\r\n    }\r\n    const handleInputChange = (event) => {\r\n        event.stopPropagation();\r\n    }\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Box sx={{ width: \"80%\", bgcolor: 'background.paper' }}>\r\n                <Tabs\r\n                    value={paramValue}\r\n                    onChange={handleChange}\r\n                    variant=\"scrollable\"\r\n                    scrollButtons=\"auto\"\r\n                >\r\n                    {paramDataSourceList.map((obj, i) => {\r\n                        return (<Tab key={i} id={obj.id} label={obj.caption} onDoubleClick={updateTabNameFunc} />)\r\n                    })}\r\n\r\n                    {/* <TextField\r\n                        label=\"Size\"\r\n                        id=\"outlined-size-small\"\r\n                        defaultValue=\"Small\"\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                    /> */}\r\n\r\n                    <Tab label={\"âœš\"} style={{ minWidth: \"48px\", background: \"#c3bfbf\" }} onClick={addNewDataSourceFunc} />\r\n\r\n                </Tabs>\r\n\r\n                {paramDataSourceList.map((obj, i) => {\r\n                    return (\r\n                        <TabPanel style={{ width: \"100%\" }} key={i} value={paramValue} index={i}>\r\n                            {obj.caption}\r\n                        </TabPanel>\r\n                    )\r\n                })}\r\n\r\n            </Box>\r\n        </ThemeProvider >\r\n    );\r\n}\r\n\r\nexport default DataSource;","import { Tabs, Tab, } from \"@material-ui/core\";\r\nimport React from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport './Indicator.css';\r\nimport TabPanel from \"./TabPanel\";\r\nimport DataSource from \"./DataSource\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport EjectIcon from '@material-ui/icons/Eject';\r\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n        display: 'flex',\r\n        height: '100%',\r\n    },\r\n    tabs: {\r\n        borderRight: `1px solid ${theme.palette.divider}`,\r\n    },\r\n    test: {\r\n        width: '50px !important'\r\n    }\r\n}));\r\n\r\n\r\n\r\nconst SMSPage = () => {\r\n    const { t } = useTranslation();\r\n    const classes = useStyles();\r\n\r\n    const aTabList = [\r\n        {\r\n            caption: t('setting'),\r\n            component: <DashboardIcon />\r\n        },\r\n        {\r\n            caption: t('dataSrouce'),\r\n            component: <DataSource />\r\n        },\r\n        {\r\n            caption: t('smsTool'),\r\n            component: <EjectIcon />\r\n        },\r\n        {\r\n            caption: t('smsScheduler'),\r\n            component: <MenuBookIcon />\r\n        },\r\n    ];\r\n\r\n    const [paramValue, setValue] = React.useState(1);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const a11yProps = (index) => {\r\n        return {\r\n            id: `vertical-tab-${index}`,\r\n            'aria-controls': `vertical-tabpanel-${index}`,\r\n        };\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Tabs\r\n                orientation=\"vertical\"\r\n                variant=\"scrollable\"\r\n                value={paramValue}\r\n                onChange={handleChange}\r\n                aria-label=\"Vertical tabs example\"\r\n                className={classes.tabs}\r\n                componentsprops={{ indicator: { className: 'Indicator' } }}\r\n            >\r\n                {aTabList.map((obj, i) => {\r\n                    return (<Tab key={i} label={obj.caption} {...a11yProps(i)} />)\r\n                })}\r\n\r\n            </Tabs>\r\n\r\n\r\n            {aTabList.map((obj, i) => {\r\n                return (\r\n                    <TabPanel style={{width:\"100%\"}} key={i} value={paramValue} index={i}>\r\n                        {obj.component}\r\n                    </TabPanel>\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SMSPage;"],"sourceRoot":""}