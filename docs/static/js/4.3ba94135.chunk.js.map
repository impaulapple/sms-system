{"version":3,"sources":["modules/SMS_Module/TabPanel.js","api/API.js","api/Getter.js","api/Converter.js","modules/SMS_Module/DataSource.js","modules/SMS_Module/index.js"],"names":["TabPanel","children","value","index","other","role","hidden","id","aria-labelledby","Box","p","server","axios","create","baseURL","headers","Pragma","crossdomain","getBoostrapTableColumnsByData","aData","oFirstRow","aColumns","sKey","push","dataField","text","convertToBootstrapData","aOriginData","i","iL","length","theme","createTheme","overrides","MuiTabs","scrollButtonsDesktop","backgroundColor","MuiTypography","body1","fontSize","lineHeight","MuiTab","wrapper","textTransform","MuiOutlinedInput","inputMarginDense","padding","DataSource","t","useTranslation","eTabs","React","useRef","useState","paramSelectedIndex","setSelectedIndex","paramEditingCaption","setEditingCaption","paramShowDialog","setShowDialog","document","sms","dataSourceList","caption","isEdit","content","showRemoveIcon","paramDataSourceList","setDataSourceList","useEffect","updateTabNameFunc","e","sNowId","target","validIsEmpty","parentElement","aNewList","slice","parseInt","editTabCaptionFunc","saveCaptionFunc","charCode","type","sNewCaption","uploadFileFunc","aFiles","oFile","oFReader","FileReader","addEventListener","callConverFileToJsonApi","result","readAsDataURL","sBinaryString","sBase64String","post","then","oRes","errorMsg","validResopnseErrorMsg","data","console","log","alert","aNewDataSourceList","catch","dynamicDeleteIconFunc","bShowRemoveIcon","eHoverEle","className","indexOf","elem","previousSibling","getChildElementIndex","showConfirmDialogFunc","closeConfirmDialogFunc","ThemeProvider","sx","bgcolor","Tabs","style","width","onChange","event","newValue","variant","scrollButtons","ref","map","obj","Tab","icon","TextField","hiddenLabel","autoFocus","toString","size","onBlur","onKeyPress","iconposition","onDoubleClick","onMouseMove","onMouseLeave","label","position","right","onClick","minWidth","background","iMaxId","Math","max","apply","o","heigth","acceptedFiles","filesLimit","maxFileSize","dropzoneText","keyField","hover","columns","cellEdit","cellEditFactory","mode","blurToSave","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","color","splice","disabled","useStyles","makeStyles","root","flexGrow","palette","paper","display","height","tabs","borderRight","divider","test","SMSPage","classes","aTabList","component","paramValue","setValue","orientation","componentsprops","indicator"],"mappings":"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","file":"static/js/4.3ba94135.chunk.js","sourcesContent":["import { Box } from \"@material-ui/core\";\r\nimport React from 'react';\r\n\r\nconst TabPanel = ({ children, value, index, ...other }) => {\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`vertical-tabpanel-${index}`}\r\n            aria-labelledby={`vertical-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TabPanel;","import axios from 'axios'\r\nimport { validIsEmpty } from './Validator';\r\n\r\n// assemblingService 相關的 Server\r\nconst server = axios.create({\r\n    baseURL: \"http://localhost:5000/\",\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        Pragma: 'no-cache',\r\n        crossdomain: true\r\n    }\r\n});\r\n\r\n\r\n// Test 相關的 api\r\nexport const apiControllerA = sParam => server.get('/ControllerA/' + sParam);\r\nexport const apiControllerB = sParam => server.get('/ControllerB/' + sParam);\r\nexport const apiControllerBAction1 = (sParam1, sParam2, sParam3) => server.post('/ControllerB/Action1', {\r\n    'Param1': sParam1,\r\n    'Param2': validIsEmpty(sParam2) ? 'ReactJS' : sParam2,\r\n    'Param3': sParam3\r\n});\r\n\r\nexport const apiConvertFileToJson = sBase64String => server.post('/DataSources/ConvertToJson',{\r\n    'FileBase64':sBase64String\r\n});","export const getObjFromArrayByKey = (ary, sKey, value) => {\r\n    for (let i = 0, iL = ary.length; i < iL; i++) {\r\n        if (ary[i][sKey] === value)\r\n            return ary[i];\r\n    }\r\n    return null;\r\n}\r\n\r\nexport const getChildElementIndex = (elem) => {\r\n    var i = 0;\r\n    while ((elem = elem.previousSibling) != null) ++i;\r\n    return i;\r\n}\r\n\r\nexport const getBoostrapTableColumnsByData = (aData) => {\r\n    let oFirstRow = aData[0];\r\n    let aColumns = [];\r\n\r\n    for (var sKey in oFirstRow) {\r\n        if (sKey === \"_id\") continue;\r\n        aColumns.push({\r\n            dataField: sKey,\r\n            text: sKey\r\n        });\r\n    }\r\n\r\n    return aColumns;\r\n}","import { validIsEmpty } from \"./Validator\";\r\n\r\nexport const convertToLocalTime = (sDateTime) => {\r\n    if (validIsEmpty(sDateTime)) return sDateTime;\r\n    sDateTime = sDateTime.replace(/T/g, ' ').replace(/-/gm, '/');\r\n    if (sDateTime.indexOf('.') > -1) {\r\n        sDateTime = sDateTime.substring(0, sDateTime.indexOf('.'));\r\n    }\r\n    let dLocalDate = new Date(sDateTime + \" UTC\");\r\n    return dLocalDate.toLocaleDateString() + \" \" + dLocalDate.toLocaleTimeString();\r\n}\r\n\r\nexport const convertGetUTC = () => {\r\n    var iGMT = new Date().getTimezoneOffset() / -60;\r\n    let sGMT = iGMT >= 0 ? `UTC+${iGMT}` : `UTC${iGMT}`;\r\n    return sGMT;\r\n}\r\n\r\nexport const convertToLocalTimeWithUTC = (sDateTime) => {\r\n    return `${convertToLocalTime(sDateTime)} (${convertGetUTC()})`;\r\n}\r\n\r\nexport const convertToBootstrapData = (aOriginData) => {\r\n    var sBootstrapUnikey = \"_id\";\r\n    for (let i = 0, iL = aOriginData.length; i < iL; i++) {\r\n        aOriginData[i][sBootstrapUnikey] = i;\r\n    }\r\n    return aOriginData;\r\n}","import {\r\n    Box, Tabs, Tab, TextField, Button,\r\n    Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions\r\n} from \"@material-ui/core\";\r\nimport React from 'react';\r\nimport TabPanel from \"./TabPanel\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport { validIsEmpty, validResopnseErrorMsg } from \"../../api/Validator\";\r\nimport { DropzoneArea } from 'material-ui-dropzone';\r\nimport { apiConvertFileToJson } from '../../api/API'\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport { getBoostrapTableColumnsByData, getChildElementIndex } from \"../../api/Getter\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport cellEditFactory from 'react-bootstrap-table2-editor';\r\nimport { convertToBootstrapData } from \"../../api/Converter\";\r\n\r\nconst theme = createTheme({\r\n    overrides: {\r\n        MuiTabs: {\r\n            scrollButtonsDesktop: {\r\n                backgroundColor: 'rgb(0 0 0 / 13%)'\r\n            }\r\n        },\r\n        MuiTypography: {\r\n            body1: {\r\n                fontSize: \"13px\",\r\n                lineHeight: \"20px\"\r\n            }\r\n        },\r\n        MuiTab: {\r\n            wrapper: {\r\n                textTransform: \"none\"\r\n            }\r\n        },\r\n        MuiOutlinedInput: {\r\n            inputMarginDense: {\r\n                padding: \"6px 10.5px !important\"\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nconst DataSource = () => {\r\n\r\n    const { t } = useTranslation();\r\n    const eTabs = React.useRef(null);\r\n\r\n    const [paramSelectedIndex, setSelectedIndex] = React.useState(0);\r\n    const [paramEditingCaption, setEditingCaption] = React.useState(\"\");\r\n    const [paramShowDialog, setShowDialog] = React.useState(false);\r\n    const [paramDataSourceList, setDataSourceList] = React.useState((document.sms && document.sms.dataSourceList) ?? [\r\n        {\r\n            id: 123,\r\n            caption: 'newTable',\r\n            isEdit: false,\r\n            content: null,\r\n            showRemoveIcon: false\r\n        },\r\n        {\r\n            id: 124,\r\n            caption: 'test2',\r\n            isEdit: false,\r\n            content: null,\r\n            showRemoveIcon: false\r\n        }\r\n    ]);\r\n\r\n    React.useEffect(() => {\r\n        if (!document.sms) {\r\n            document.sms = {};\r\n        }\r\n\r\n        document.sms.dataSourceList = paramDataSourceList;\r\n    });\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setSelectedIndex(newValue);\r\n        console.log(newValue)\r\n    };\r\n\r\n    const updateTabNameFunc = (e) => {\r\n        let sNowId = e.target.id;\r\n        if (validIsEmpty(sNowId)) sNowId = e.target.parentElement.id\r\n        if (validIsEmpty(sNowId)) return;\r\n\r\n        let aNewList = paramDataSourceList.slice();\r\n        for (let i = 0, iL = aNewList.length; i < iL; i++) {\r\n            if (aNewList[i].id === parseInt(sNowId)) {\r\n                aNewList[i].isEdit = true;\r\n                setEditingCaption(aNewList[i].caption);\r\n                break;\r\n            }\r\n        }\r\n        setDataSourceList(aNewList);\r\n    }\r\n\r\n    const editTabCaptionFunc = (e) => {\r\n        setEditingCaption(e.target.value);\r\n    }\r\n\r\n    const saveCaptionFunc = (e) => {\r\n        if (e.charCode !== 13 && e.type !== \"blur\") return;\r\n        let sNewCaption = e.target.value;\r\n        let sNowId = e.target.id;\r\n\r\n        let aNewList = paramDataSourceList.slice();\r\n        for (let i = 0, iL = aNewList.length; i < iL; i++) {\r\n            if (aNewList[i].id === parseInt(sNowId)) {\r\n                aNewList[i].isEdit = false;\r\n                aNewList[i].caption = sNewCaption;\r\n                break;\r\n            }\r\n        }\r\n        setDataSourceList(aNewList);\r\n    }\r\n\r\n    const addNewDataSourceFunc = (e) => {\r\n\r\n        let aNewList = paramDataSourceList.slice();\r\n        let iMaxId = Math.max.apply(null, aNewList.map(o => o.id));\r\n        aNewList.push({\r\n            id: ++iMaxId,\r\n            caption: t('newTable') + (aNewList.length + 1),\r\n            isEdit: false\r\n        });\r\n        setDataSourceList(aNewList);\r\n    }\r\n\r\n    const uploadFileFunc = (aFiles) => {\r\n\r\n        if (validIsEmpty(aFiles)) return;\r\n        let oFile = aFiles[0];\r\n        let oFReader = new FileReader();\r\n        oFReader.addEventListener(\"load\", function () {\r\n            callConverFileToJsonApi(oFReader.result);\r\n        }, false);\r\n        oFReader.readAsDataURL(oFile);\r\n    }\r\n\r\n    const callConverFileToJsonApi = (sBinaryString) => {\r\n        apiConvertFileToJson(sBinaryString).then(oRes => {\r\n            let errorMsg = validResopnseErrorMsg(oRes.data);\r\n            if (!validIsEmpty(errorMsg)) {\r\n                console.log(\"error:\", errorMsg);\r\n                return alert(errorMsg);\r\n            }\r\n            let aData = oRes.data.content;\r\n            let aNewDataSourceList = paramDataSourceList.slice();\r\n\r\n            aNewDataSourceList[paramSelectedIndex].content = aData;\r\n\r\n            setDataSourceList(aNewDataSourceList);\r\n\r\n        }).catch(e => {\r\n            console.log(\"error:\", e);\r\n        });\r\n    }\r\n\r\n    const dynamicDeleteIconFunc = (e) => {\r\n\r\n        let bShowRemoveIcon = true;\r\n        if (e.type === \"mouseleave\")\r\n            bShowRemoveIcon = false;\r\n\r\n        let eHoverEle = e.target;\r\n\r\n        if (eHoverEle.className && !eHoverEle.className.indexOf) return;\r\n\r\n        if (eHoverEle.className && eHoverEle.className.indexOf && eHoverEle.className.indexOf(\"sms-datasource-tab\") === -1) {\r\n            eHoverEle = e.target.parentElement;\r\n        }\r\n\r\n        let iHoverIndex = getChildElementIndex(eHoverEle)\r\n\r\n        if (iHoverIndex !== paramSelectedIndex) bShowRemoveIcon = false;\r\n\r\n        let aNewDataSourceList = paramDataSourceList.slice();\r\n\r\n        aNewDataSourceList[paramSelectedIndex].showRemoveIcon = bShowRemoveIcon;\r\n\r\n        setDataSourceList(aNewDataSourceList);\r\n\r\n    }\r\n\r\n    const showConfirmDialogFunc = (e) => {\r\n        setShowDialog(true);\r\n    }\r\n\r\n    const closeConfirmDialogFunc = (e) => {\r\n        setShowDialog(false);\r\n    };\r\n\r\n    const deleteDataTableFunc = (e) => {\r\n\r\n        let aNewDataSourceList = paramDataSourceList.slice();\r\n\r\n        aNewDataSourceList.splice(paramSelectedIndex, 1);\r\n\r\n        setSelectedIndex(aNewDataSourceList.length - 1);\r\n        \r\n        setDataSourceList(aNewDataSourceList);\r\n\r\n        closeConfirmDialogFunc();\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Box sx={{ bgcolor: 'background.paper' }}>\r\n                <Tabs\r\n                    style={{ width: \"80%\" }}\r\n                    value={paramSelectedIndex}\r\n                    onChange={handleChange}\r\n                    variant=\"scrollable\"\r\n                    scrollButtons=\"auto\"\r\n                    ref={eTabs}\r\n                >\r\n                    {paramDataSourceList.map((obj, i) => {\r\n                        if (obj.isEdit)\r\n                            return (\r\n                                <Tab key={i} id={obj.id} icon={<TextField\r\n                                    hiddenLabel\r\n                                    autoFocus\r\n                                    style={{ width: 130 }}\r\n                                    id={obj.id.toString()}\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    value={paramEditingCaption}\r\n                                    onBlur={saveCaptionFunc}\r\n                                    onKeyPress={saveCaptionFunc}\r\n                                    onChange={editTabCaptionFunc}\r\n                                />}\r\n                                />)\r\n                        else\r\n                            return (<Tab\r\n                                className=\"sms-datasource-tab\"\r\n                                key={i}\r\n                                id={obj.id}\r\n                                iconposition='end'\r\n                                onDoubleClick={updateTabNameFunc}\r\n                                onMouseMove={dynamicDeleteIconFunc}\r\n                                onMouseLeave={dynamicDeleteIconFunc}\r\n                                label={<>{obj.caption}{obj.showRemoveIcon ? <HighlightOffIcon style={{ position: \"absolute\", right: 0 }} onClick={showConfirmDialogFunc} /> : null}</>}\r\n                            />)\r\n                    })}\r\n\r\n                    <Tab label={\"✚\"} style={{ minWidth: \"48px\", background: \"#c3bfbf\" }} onClick={addNewDataSourceFunc} />\r\n\r\n                </Tabs>\r\n\r\n                {paramDataSourceList.map((obj, i) => {\r\n                    if (validIsEmpty(obj.content))\r\n                        return (\r\n                            <TabPanel style={{ width: \"100%\" }} key={i} value={paramSelectedIndex} index={i}>\r\n                                <DropzoneArea\r\n                                    style={{ heigth: \"500px\", width: \"600px\" }}\r\n                                    acceptedFiles={['.csv', '.xlsx']}\r\n                                    filesLimit={1}\r\n                                    maxFileSize={1024 * 1024 * 5}\r\n                                    dropzoneText={t('uploadDataSource')}\r\n                                    onChange={uploadFileFunc}\r\n                                />\r\n                            </TabPanel>\r\n                        )\r\n                    else\r\n                        return (\r\n                            <TabPanel style={{ width: \"100%\" }} key={i} value={paramSelectedIndex} index={i}>\r\n                                <BootstrapTable\r\n                                    style={{ minWidth: \"100%\" }}\r\n                                    keyField='_id'\r\n                                    hover\r\n                                    data={convertToBootstrapData(obj.content)}\r\n                                    columns={getBoostrapTableColumnsByData(obj.content)}\r\n                                    cellEdit={cellEditFactory({ mode: 'dbclick', blurToSave: true })}\r\n                                />\r\n                            </TabPanel>\r\n                        )\r\n                })}\r\n\r\n            </Box>\r\n\r\n            <Dialog open={paramShowDialog} onClose={closeConfirmDialogFunc}>\r\n                <DialogTitle id=\"delete-dialog-title\">\r\n                    {t('confirmDeleteTable')}\r\n                </DialogTitle>\r\n                <DialogContent style={{ width: \"450px\" }}>\r\n                    <DialogContentText id=\"delete-dialog-description\">\r\n                        {t('dataTable')}:「{paramDataSourceList[paramSelectedIndex].caption}」\r\n                        {t('confirmDeleteDetail')}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeConfirmDialogFunc} variant=\"contained\" color=\"primary\" autoFocus>{t('Disagree')}</Button>\r\n                    <Button onClick={deleteDataTableFunc} disabled={paramDataSourceList.length === 1}>{t('Agree')}</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </ThemeProvider >\r\n    );\r\n}\r\n\r\nexport default DataSource;","import { Tabs, Tab, } from \"@material-ui/core\";\r\nimport React from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport './index.css';\r\nimport TabPanel from \"./TabPanel\";\r\nimport DataSource from \"./DataSource\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport EjectIcon from '@material-ui/icons/Eject';\r\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n        display: 'flex',\r\n        height: '100%',\r\n    },\r\n    tabs: {\r\n        borderRight: `1px solid ${theme.palette.divider}`,\r\n    },\r\n    test: {\r\n        width: '50px !important'\r\n    }\r\n}));\r\n\r\n\r\n\r\nconst SMSPage = () => {\r\n    const { t } = useTranslation();\r\n    const classes = useStyles();\r\n\r\n    const aTabList = [\r\n        {\r\n            caption: t('setting'),\r\n            component: <h1>yoyoyoyoyo King! 這是第一頁</h1>\r\n        },\r\n        {\r\n            caption: t('dataSrouce'),\r\n            component: <DataSource />\r\n        },\r\n        {\r\n            caption: t('smsTool'),\r\n            component: <EjectIcon />\r\n        },\r\n        {\r\n            caption: t('smsScheduler'),\r\n            component: <MenuBookIcon />\r\n        },\r\n    ];\r\n\r\n    const [paramValue, setValue] = React.useState(1);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const a11yProps = (index) => {\r\n        return {\r\n            id: `vertical-tab-${index}`,\r\n            'aria-controls': `vertical-tabpanel-${index}`,\r\n        };\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Tabs\r\n                className=\"sms-index-tabs\"\r\n                orientation=\"vertical\"\r\n                variant=\"scrollable\"\r\n                value={paramValue}\r\n                onChange={handleChange}\r\n                componentsprops={{ indicator: { className: 'Indicator' } }}\r\n            >\r\n                {aTabList.map((obj, i) => {\r\n                    return (<Tab key={i} label={obj.caption} {...a11yProps(i)} />)\r\n                })}\r\n\r\n            </Tabs>\r\n\r\n\r\n            {aTabList.map((obj, i) => {\r\n                return (\r\n                    <TabPanel style={{ width: \"100%\" }} key={i} value={paramValue} index={i}>\r\n                        {obj.component}\r\n                    </TabPanel>\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SMSPage;"],"sourceRoot":""}